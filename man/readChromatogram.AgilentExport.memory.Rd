% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readFunctionsAgilent.R
\name{readChromatogram.AgilentExport.memory}
\alias{readChromatogram.AgilentExport.memory}
\title{readChromatogram.AgilentExport.memory}
\usage{
readChromatogram.AgilentExport.memory(
  textLines,
  sep = ",",
  translateComment = NA,
  removePatterns = c("\\\\\\"", "#"),
  dataColumns = c(2, 3),
  columnNames = c("rt", "intensity")
)
}
\arguments{
\item{textLines}{character vector of the data in Agilent chromatogram export
format: first line = description, second line = Agilent names for x & y (not
used) and the rest of the lines are c(rownumbers, x, y). The rownumbers are
ignored.}

\item{sep}{defines the separator for the rownumber-x-y data. Default is ','}

\item{translateComment}{defines the function to be used to translate the
description line. Default is NA. \code{link[readAgilent]{readChromatogram.AgilentExport}}
is this package's function that can be used.}

\item{removePatterns}{defines which characters to remove from the description
line (defore translation)}

\item{dataColumns}{defines which columns to extract from the data. Default is
c(2,3). The rownumbers are ignored}

\item{columnNames}{defines which names to give to the extracted columns.
Default is 'rt' (retention time) for x and 'intensity' for y}
}
\value{
a function that generates a list with two elements: data (data.frame)
and info (list)
}
\description{
function factory that returns a function that takes the data
from a character vector which is in the format of an Agilent chromatogram
export (single chromatogram, not multiple) and returns an object (list) with
two elements: data (data.frame) and info (list)
}
\note{
this function gets called by the \code{link[readAgilent]{readChromatogram.AgilentExport}}
function
}
\examples{
demoFile <- fs::path_package("extdata", "Data0001.CSV", package = "readAgilent")
result <- readLines(demoFile, n = 9092)
result |> head()
result <- readChromatogram.AgilentExport.memory(result,
 translateComment = chromatogramInfo.AgilentExport)()
result$data |> head()
result$info

}
